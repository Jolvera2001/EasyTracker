<div class="@(IsVisible ? "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center" : "hidden")">
    <div class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold">@Title</h3>
            <button @onclick="Close" class="text-gray-500 hover:text-gray-700">
                <span class="sr-only">Close</span>
                <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>

        <div class="space-y-4">
            @ChildContent
        </div>

        <div class="mt-6 flex justify-end space-x-3">
            @if (ShowCancel)
            {
                <button @onclick="Close" class="px-4 py-2 border rounded-md hover:bg-gray-50">
                    Cancel
                </button>
            }
            @if (!string.IsNullOrEmpty(ConfirmText))
            {
                <button @onclick="OnConfirm" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                    @ConfirmText
                </button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public bool ShowCancel { get; set; } = true;
    [Parameter] public string ConfirmText { get; set; } = "Confirm";
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private Task Close()
    {
        return OnClose.InvokeAsync();
    }

}